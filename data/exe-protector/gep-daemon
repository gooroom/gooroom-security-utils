#!/bin/bash
### BEGIN INIT INFO
# Provides:          gep-daemon
# Required-Start:
# Required-Stop:
# Should-Start:
# Should-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: Gooroom Executable File Protector service
# Description:       Gooroom Executable File Protector protects drivers and executable files.
### END INIT INFO

set -e

SERVICE_NAME="gep-daemon"
SERVICE_PATH="/usr/share/gooroom-security/exe-protector/$SERVICE_NAME"
TAG_NAME="GEP"

OPTIONS=""
MODULES=""

# Get lsb functions
. /lib/lsb/init-functions
ret_value_of_check=

check() {
	# 부트 파라메터 확인 및 로그에서 policy update 확인
	cmdline=$(cat /proc/cmdline)
	cmdline+=" "
	ima_message=$(journalctl -b | grep "kernel: IMA: policy update completed")

	# 정규표현식
	re_enforce="\s+ima_appraise=enforce\s+"
	re_off="\s+ima=off\s+"
	re_policy="IMA: policy update completed"

	if [[ $cmdline =~ $re_enforce && ! $cmdline =~ $re_off && $ima_message =~ $re_policy ]]; then
		log_action_msg "$TAG_NAME:" "$SERVICE_NAME active"
		ret_value_of_check="0"
	else
		log_action_msg "$TAG_NAME:" "$SERVICE_NAME inactive"
		ret_value_of_check="-1"
	fi
}

# 실행파일 보호 서비스
case "$1" in
	start)
		log_daemon_msg "$TAG_NAME" "Start Gooroom Executable File Protector service"
		log_end_msg 0
		check
		logger --id=$$ -p 3 -t $SERVICE_NAME "$TAG_NAME: errorcode=$ret_value_of_check"
	;;

	stop)
		log_daemon_msg "$TAG_NAME" "Stop Gooroom Executable File Protector service"
		log_end_msg 0
		logger --id=$$ -p 3 -t $SERVICE_NAME "$TAG_NAME: errorcode=1"
	;;

	enable-autostart)
		log_action_msg "$TAG_NAME" "Enabling autostart"
		update-rc.d $SERVICE_NAME remove
		cp $SERVICE_PATH /etc/init.d/
		update-rc.d $SERVICE_NAME defaults
	;;

	disable-autostart)
		log_action_msg "$TAG_NAME" "Disabling autostart"
		update-rc.d exe-protector remove
	;;

	check)
		check
	;;

	*)
		log_action_msg "Usage: $0 {start|stop|enable-autostart|disable-autostart|check}"
		exit 1
	;;
esac

exit 0
